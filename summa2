import json
import csv

# Load the JSON data (replace 'data_lake_permissions.json' with your JSON file path)
with open('data_lake_permissions.json', 'r') as json_file:
    data = json.load(json_file)

# Extracted data list
extracted_data = []

# Extract information from JSON
for permission in data.get("PrincipalResourcePermissions", []):
    principal_identifier = permission.get("Principal", {}).get("DataLakePrincipalIdentifier", "")
    
    # Extract fields from the Resource JSON
    resource = permission.get("Resource", {})
    resource_catalog_id = resource.get("Catalog", {}).get("CatalogId", "")
    resource_database_name = resource.get("Database", {}).get("Name", "")
    resource_table_name = resource.get("Table", {}).get("Name", "")
    resource_lf_tag_policy_arn = resource.get("LF Tag Policy", {}).get("ResourceArn", "")

    permissions = ", ".join(permission.get("Permissions", []))
    grantable = permission.get("Grantable", False)

    # Create a dictionary with extracted values
    extracted_data.append({
        "PrincipalIdentifier": principal_identifier,
        "ResourceCatalogId": resource_catalog_id,
        "ResourceDatabaseName": resource_database_name,
        "ResourceTableName": resource_table_name,
        "ResourceLFTagPolicyArn": resource_lf_tag_policy_arn,
        "Permissions": permissions,
        "Grantable": grantable,
    })

# Define the CSV file path
csv_file_path = 'lakeformation_permissions_with_resource.csv'

# Write the extracted data to a CSV file
with open(csv_file_path, 'w', newline='') as csv_file:
    fieldnames = [
        "PrincipalIdentifier", "ResourceCatalogId", "ResourceDatabaseName",
        "ResourceTableName", "ResourceLFTagPolicyArn", "Permissions", "Grantable"
    ]
    csv_writer = csv.DictWriter(csv_file, fieldnames=fieldnames)

    # Write the header row
    csv_writer.writeheader()

    # Write the extracted data rows
    csv_writer.writerows(extracted_data)

print(f"Data extracted and written to {csv_file_path}")
