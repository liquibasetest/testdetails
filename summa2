Immuta is a data governance platform that provides advanced data access control, privacy, and security features for organizations dealing with sensitive and regulated data. It's designed to help organizations manage, govern, and share data in a secure and compliant manner. Immuta offers fine-grained access control, dynamic data masking, and auditing capabilities, among other features, to ensure data privacy and compliance with various regulations.

When integrating Immuta with Amazon Redshift, it allows for seamless control and governance over data within the Redshift cluster. Immuta is designed to connect to various databases and data technologies to provide advanced data governance, access control, and privacy features. But this document covers the immuta integration with Redshift Cluster



The Redshift cluster has been set up to utilize Redshift Spectrum, enabling access to data stored in Amazon S3. This data can be directly reached via Redshift Spectrum through external schemas and tables, or by establishing a catalog in Glue that references the S3 bucket. Access to the Glue catalog within Redshift Spectrum is facilitated through an external schema.
The Immuta-read role has been established to retrieve table information from the Redshift cluster. On the other hand, the "Immuta-privilege" role grants Immuta permissions to generate views based on specified subscription and data policies set up within Immuta.
Data stewards define fine-grained access control policies within Immuta, aligning with organizational security and privacy requirements.
When a user requests data from Amazon Redshift, the request is intercepted by Immuta.
Immuta evaluates the request against the defined policies and dynamically masks data, ignore some columns if needed.
The masked or authorized data is presented to the user, ensuring compliance with access policies.


Currently, Fine-grained access control isn't in place within the CCB Risk(FRDC)area. Access is granted to consumers through AWS Lake Formation based on data catalog resource names (databases or tables) through lake formation account or directly from producer account. The utilization of a tag-based approach is not yet in practice, but we are transitioning toward this method. With the inclusion of Immuta, we intend to assess and implement this transition effectively.

Serverless comes in to picture which will simplyfy the provision of the account and accessing glue catalog. Evaluating and considering Starburst as an option in our organization is a separate discussion, and it can provide additional querying capabilities and integration possibilities.

Please see the option, how we can influence Immuta in our architecture.

Option 1:
Use Lake Formation for coarse-grained access control, sharing database access with consumers through a federated Lake Formation account or directly from the producer account. Limit table/column access using Immuta. The advantage here is that the producer is responsible for creating the metadata, ensuring common metadata names for multiple consumers accessing the same S3 file. The disadvantage is the use of both Lake Formation and Immuta for access control.

Option 2:
Access the producer's S3 bucket through S3 Cross Account access and create external schemas/tables in the Redshift cluster to utilize Redshift Spectrum. Implement fine-grained access control using Immuta. An advantage of this option is that only one S3 cross-account access needs to be created. However, a disadvantage is that if multiple consumers access the same data, separate metadata for the same S3 content is needed, and Athena may face challenges in reading this data.

Option 3:
Access the producer's S3 bucket through S3 Cross Account access, create Glue tables pointing to S3 (for Athena use as well), and establish an external schema for the Glue catalog. Implement fine-grained access control using Immuta. An advantage is that Athena can read the data, and Glue tables suffice for access via Redshift Spectrum. However, a disadvantage is the need for two S3 access points: one via Glue and another via Redshift Spectrum.

Revised Summary:
Option 1:

Advantage: Producer-managed metadata with common names for S3 access.
Disadvantage: Dual use of Lake Formation and Immuta for access control.
Option 2:

Advantage: Single S3 cross-account access needed.
Disadvantage: Potential metadata challenges for multiple consumers and Athena.
Option 3:

Advantage: Athena compatibility and efficient Redshift Spectrum access.
Disadvantage: Requires two S3 access points (Glue and Redshift Spectrum).


Considering these points, Option 1 might be a good choice if you prioritize a producer-managed metadata approach and ensuring common metadata names for S3 access. However, if minimizing the number of access points is crucial, Option 2 may be more appealing. Option 3 offers compatibility with Athena and efficient Redshift Spectrum access but at the cost of managing two S3 access points.
