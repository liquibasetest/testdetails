import boto3
import csv

# Initialize the S3 client
s3 = boto3.client('s3')

# Output CSV file
output_csv = 's3_lifecycle_policies.csv'

# Write CSV header
csv_header = ["Bucket Name", "Rule Name", "Status", "Prefix", "Expiration (Days)", "Transition (Days)", "Storage Class"]

with open(output_csv, 'w', newline='') as csvfile:
    csv_writer = csv.writer(csvfile)
    csv_writer.writerow(csv_header)

    # List all S3 buckets
    buckets = s3.list_buckets()['Buckets']

    for bucket in buckets:
        bucket_name = bucket['Name']

        try:
            # Get the lifecycle configuration for the bucket
            response = s3.get_bucket_lifecycle_configuration(Bucket=bucket_name)

            # Extract and format the lifecycle policy information
            for rule in response.get('Rules', []):
                rule_name = rule.get('ID', 'N/A')
                status = rule.get('Status', 'N/A')
                prefix = rule.get('Prefix', 'N/A')
                expiration_days = rule.get('Expiration', {}).get('Days', 'N/A')
                transition_days = rule.get('Transitions', [{}])[0].get('Days', 'N/A')
                storage_class = rule.get('Transitions', [{}])[0].get('StorageClass', 'N/A')

                # Write the information to the CSV file
                csv_writer.writerow([bucket_name, rule_name, status, prefix, expiration_days, transition_days, storage_class])

        except Exception as e:
            # Handle any errors that may occur while retrieving the lifecycle policy
            print(f"Error for bucket '{bucket_name}': {str(e)}")

print(f"Lifecycle policy information has been written to {output_csv}")
