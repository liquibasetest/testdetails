import boto3
import json

# Initialize the S3 client
s3 = boto3.client('s3')

# List all S3 buckets
buckets = [bucket['Name'] for bucket in s3.list_buckets()['Buckets']]

# Create a dictionary to store bucket names and their lifecycle configurations
bucket_lifecycle_configs = {}

# Iterate through each bucket and get its lifecycle configuration
for bucket_name in buckets:
    try:
        response = s3.get_bucket_lifecycle_configuration(Bucket=bucket_name)
        lifecycle_configuration = response['Rules']
        bucket_lifecycle_configs[bucket_name] = lifecycle_configuration
    except s3.exceptions.NoSuchLifecycleConfiguration:
        # If the bucket has no lifecycle configuration, handle the exception
        bucket_lifecycle_configs[bucket_name] = "No lifecycle configuration"

# Define the output file name
output_file = 's3_bucket_lifecycle_configs.json'

# Write the bucket lifecycle configurations to a JSON file
with open(output_file, 'w') as json_file:
    json.dump(bucket_lifecycle_configs, json_file, indent=4)

print(f"Lifecycle configurations for S3 buckets have been written to {output_file}")
