import boto3
import csv
import json

# Initialize the S3 client
s3_client = boto3.client('s3')

# Specify the name of the S3 bucket
bucket_name = 'your-bucket-name'

# Specify the output CSV file path
output_csv_file = 'access_point_policies.csv'

try:
    # Get the list of access points for the specified bucket
    access_point_response = s3_client.list_access_points(Bucket=bucket_name)

    # Prepare the CSV file for writing
    with open(output_csv_file, 'w', newline='') as csv_file:
        fieldnames = ['Bucket', 'Access Point', 'Effect', 'Principal', 'Action', 'Resource']
        csv_writer = csv.DictWriter(csv_file, fieldnames=fieldnames)
        csv_writer.writeheader()

        # Iterate through the list of access points
        for access_point in access_point_response['AccessPointList']:
            access_point_name = access_point['Name']

            # Get the access point policy
            access_point_policy_response = s3_client.get_access_point_policy(
                AccountId='your-account-id',
                Name=access_point_name
            )
            access_point_policy = access_point_policy_response['Policy']

            # Parse the policy to extract "Allow" statements and write to CSV
            parsed_policy = json.loads(access_point_policy)
            allow_statements = parsed_policy.get('Statement', [])
            allow_statements = [statement for statement in allow_statements if statement.get('Effect') == 'Allow']

            for statement in allow_statements:
                resource_values = statement.get('Resource', [])
                if isinstance(resource_values, str):
                    resource_values = [resource_values]

                for resource in resource_values:
                    csv_writer.writerow({
                        'Bucket': bucket_name,
                        'Access Point': access_point_name,
                        'Effect': statement.get('Effect'),
                        'Principal': statement.get('Principal'),
                        'Action': ','.join(statement.get('Action', [])),
                        'Resource': resource
                    })

    print("CSV output written to", output_csv_file)

except Exception as e:
    print("Error:", e)
